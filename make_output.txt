arm-none-eabi-gcc main.c startup.c syscalls.c STM32_init.c drivers/MS5611_driver.c filters.c drivers/ADXL375_driver.c test_routines.c data_buffer.c drivers/LSM6DS3_driver.c -W -Wall -Wextra -Wundef -Wshadow -Wdouble-promotion -Wformat-truncation -fno-common -Wconversion -Wno-unknown-pragmas -g3 -O0 -ffunction-sections -fdata-sections -I. -Iinclude -mcpu=cortex-m4 -mthumb -mfloat-abi=hard -mfpu=fpv4-sp-d16  -lm -Tlink.ld -nostartfiles -nostdlib --specs nano.specs -lc -lgcc -Wl,--gc-sections -Wl,-Map=firmware.elf.map -o firmware.elf
In file included from main.c:9:
mcu.h: In function 'spi_transmit_receive':
mcu.h:545:15: warning: conversion to 'int8_t' {aka 'signed char'} from 'uint8_t' {aka 'unsigned char'} may change the sign of the result [-Wsign-conversion]
  545 |   int8_t rs = receive_size;
      |               ^~~~~~~~~~~~
mcu.h:556:31: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
  556 |     *((uint8_t*)result_ptr) = result;
      |                               ^~~~~~
mcu.h:558:32: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  558 |     *((uint16_t*)result_ptr) = result;
      |                                ^~~~~~
In file included from drivers/LSM6DS3_driver.h:11,
                 from frame_array.h:13,
                 from main.c:10:
./filters.h: At top level:
./filters.h:15: warning: "M_PI" redefined
   15 | #define M_PI 205887 //3.14159 << 16   // Value of pi in fixed point
      | 
In file included from mcu.h:14:
/opt/arm-none-eabi/arm-none-eabi/include/math.h:613: note: this is the location of the previous definition
  613 | #define M_PI            3.14159265358979323846
      | 
In file included from main.c:13:
NAND_flash_driver.h: In function 'zip':
NAND_flash_driver.h:121:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  121 |   zippedData[i++] = (int8_t)((unzippedData.accel.x  >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:122:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  122 |   zippedData[i++] = (int8_t)(unzippedData.accel.x & 0xFF);
      |                     ^
NAND_flash_driver.h:123:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  123 |   zippedData[i++] = (int8_t)((unzippedData.accel.y  >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:124:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  124 |   zippedData[i++] = (int8_t)(unzippedData.accel.y & 0xFF);
      |                     ^
NAND_flash_driver.h:125:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  125 |   zippedData[i++] = (int8_t)((unzippedData.accel.z  >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:126:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  126 |   zippedData[i++] = (int8_t)(unzippedData.accel.z & 0xFF);
      |                     ^
NAND_flash_driver.h:129:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  129 |   zippedData[i++] = (int8_t)((unzippedData.imu.x_rate >> 24) & 0xFF);
      |                     ^
NAND_flash_driver.h:130:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  130 |   zippedData[i++] = (int8_t)((unzippedData.imu.x_rate >> 16) & 0xFF);
      |                     ^
NAND_flash_driver.h:131:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  131 |   zippedData[i++] = (int8_t)((unzippedData.imu.x_rate >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:132:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  132 |   zippedData[i++] = (int8_t)(unzippedData.imu.x_rate & 0xFF);
      |                     ^
NAND_flash_driver.h:133:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  133 |   zippedData[i++] = (int8_t)((unzippedData.imu.y_rate >> 24) & 0xFF);
      |                     ^
NAND_flash_driver.h:134:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  134 |   zippedData[i++] = (int8_t)((unzippedData.imu.y_rate >> 16) & 0xFF);
      |                     ^
NAND_flash_driver.h:135:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  135 |   zippedData[i++] = (int8_t)((unzippedData.imu.y_rate >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:136:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  136 |   zippedData[i++] = (int8_t)(unzippedData.imu.y_rate & 0xFF);
      |                     ^
NAND_flash_driver.h:137:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  137 |   zippedData[i++] = (int8_t)((unzippedData.imu.z_rate >> 24) & 0xFF);
      |                     ^
NAND_flash_driver.h:138:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  138 |   zippedData[i++] = (int8_t)((unzippedData.imu.z_rate >> 16) & 0xFF);
      |                     ^
NAND_flash_driver.h:139:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  139 |   zippedData[i++] = (int8_t)((unzippedData.imu.z_rate >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:140:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  140 |   zippedData[i++] = (int8_t)(unzippedData.imu.z_rate & 0xFF);
      |                     ^
NAND_flash_driver.h:142:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  142 |   zippedData[i++] = (int8_t)((unzippedData.imu.x_offset >> 24) & 0xFF);
      |                     ^
NAND_flash_driver.h:143:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  143 |   zippedData[i++] = (int8_t)((unzippedData.imu.x_offset >> 16) & 0xFF);
      |                     ^
NAND_flash_driver.h:144:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  144 |   zippedData[i++] = (int8_t)((unzippedData.imu.x_offset >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:145:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  145 |   zippedData[i++] = (int8_t)(unzippedData.imu.x_offset & 0xFF);
      |                     ^
NAND_flash_driver.h:146:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  146 |   zippedData[i++] = (int8_t)((unzippedData.imu.y_offset >> 24) & 0xFF);
      |                     ^
NAND_flash_driver.h:147:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  147 |   zippedData[i++] = (int8_t)((unzippedData.imu.y_offset >> 16) & 0xFF);
      |                     ^
NAND_flash_driver.h:148:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  148 |   zippedData[i++] = (int8_t)((unzippedData.imu.y_offset >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:149:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  149 |   zippedData[i++] = (int8_t)(unzippedData.imu.y_offset & 0xFF);
      |                     ^
NAND_flash_driver.h:150:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  150 |   zippedData[i++] = (int8_t)((unzippedData.imu.z_offset >> 24) & 0xFF);
      |                     ^
NAND_flash_driver.h:151:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  151 |   zippedData[i++] = (int8_t)((unzippedData.imu.z_offset >> 16) & 0xFF);
      |                     ^
NAND_flash_driver.h:152:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  152 |   zippedData[i++] = (int8_t)((unzippedData.imu.z_offset >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:153:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  153 |   zippedData[i++] = (int8_t)(unzippedData.imu.z_offset & 0xFF);
      |                     ^
NAND_flash_driver.h:155:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  155 |   zippedData[i++] = (int8_t)((unzippedData.imu.x_accel >> 24) & 0xFF);
      |                     ^
NAND_flash_driver.h:156:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  156 |   zippedData[i++] = (int8_t)((unzippedData.imu.x_accel >> 16) & 0xFF);
      |                     ^
NAND_flash_driver.h:157:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  157 |   zippedData[i++] = (int8_t)((unzippedData.imu.x_accel >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:158:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  158 |   zippedData[i++] = (int8_t)(unzippedData.imu.x_accel & 0xFF);
      |                     ^
NAND_flash_driver.h:159:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  159 |   zippedData[i++] = (int8_t)((unzippedData.imu.y_accel >> 24) & 0xFF);
      |                     ^
NAND_flash_driver.h:160:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  160 |   zippedData[i++] = (int8_t)((unzippedData.imu.y_accel >> 16) & 0xFF);
      |                     ^
NAND_flash_driver.h:161:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  161 |   zippedData[i++] = (int8_t)((unzippedData.imu.y_accel >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:162:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  162 |   zippedData[i++] = (int8_t)(unzippedData.imu.y_accel & 0xFF);
      |                     ^
NAND_flash_driver.h:163:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  163 |   zippedData[i++] = (int8_t)((unzippedData.imu.z_accel >> 24) & 0xFF);
      |                     ^
NAND_flash_driver.h:164:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  164 |   zippedData[i++] = (int8_t)((unzippedData.imu.z_accel >> 16) & 0xFF);
      |                     ^
NAND_flash_driver.h:165:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  165 |   zippedData[i++] = (int8_t)((unzippedData.imu.z_accel >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:166:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  166 |   zippedData[i++] = (int8_t)(unzippedData.imu.z_accel & 0xFF);
      |                     ^
NAND_flash_driver.h:193:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  193 |   zippedData[i++] = (int8_t)((unzippedData.bme.temperature >> 8) & 0xFF);
      |                     ^
NAND_flash_driver.h:194:21: warning: conversion to 'uint8_t' {aka 'unsigned char'} from 'signed char' may change the sign of the result [-Wsign-conversion]
  194 |   zippedData[i++] = (int8_t) (unzippedData.bme.temperature & 0xFF);
      |                     ^
NAND_flash_driver.h: In function 'print_frame_array':
NAND_flash_driver.h:396:10: warning: format '%d' expects argument of type 'int', but argument 2 has type 'int32_t' {aka 'long int'} [-Wformat=]
  396 |   printf("IMU: \tX Rate: %d,\tY Rate: %d,\tZ Rate: %d,\tX Offset: %d,\tY Offset: %d, \
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  397 |         \tZ Offset: %d,\tX Accel: %d,\tY Accel: %d,\tZ Accel: %d,\r\n", frameFormat.imu.x_rate,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        |
      |                                                                                        int32_t {aka long int}
NAND_flash_driver.h:396:10: warning: format '%d' expects argument of type 'int', but argument 3 has type 'int32_t' {aka 'long int'} [-Wformat=]
  396 |   printf("IMU: \tX Rate: %d,\tY Rate: %d,\tZ Rate: %d,\tX Offset: %d,\tY Offset: %d, \
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  397 |         \tZ Offset: %d,\tX Accel: %d,\tY Accel: %d,\tZ Accel: %d,\r\n", frameFormat.imu.x_rate,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  398 |                                                                         frameFormat.imu.y_rate,
      |                                                                         ~~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        |
      |                                                                                        int32_t {aka long int}
NAND_flash_driver.h:396:10: warning: format '%d' expects argument of type 'int', but argument 4 has type 'int32_t' {aka 'long int'} [-Wformat=]
  396 |   printf("IMU: \tX Rate: %d,\tY Rate: %d,\tZ Rate: %d,\tX Offset: %d,\tY Offset: %d, \
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  397 |         \tZ Offset: %d,\tX Accel: %d,\tY Accel: %d,\tZ Accel: %d,\r\n", frameFormat.imu.x_rate,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  398 |                                                                         frameFormat.imu.y_rate,
  399 |                                                                         frameFormat.imu.z_rate,
      |                                                                         ~~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        |
      |                                                                                        int32_t {aka long int}
NAND_flash_driver.h:396:10: warning: format '%d' expects argument of type 'int', but argument 5 has type 'int32_t' {aka 'long int'} [-Wformat=]
  396 |   printf("IMU: \tX Rate: %d,\tY Rate: %d,\tZ Rate: %d,\tX Offset: %d,\tY Offset: %d, \
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  397 |         \tZ Offset: %d,\tX Accel: %d,\tY Accel: %d,\tZ Accel: %d,\r\n", frameFormat.imu.x_rate,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
......
  400 |                                                                         frameFormat.imu.x_offset,
      |                                                                         ~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        |
      |                                                                                        int32_t {aka long int}
NAND_flash_driver.h:396:10: warning: format '%d' expects argument of type 'int', but argument 6 has type 'int32_t' {aka 'long int'} [-Wformat=]
  396 |   printf("IMU: \tX Rate: %d,\tY Rate: %d,\tZ Rate: %d,\tX Offset: %d,\tY Offset: %d, \
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  397 |         \tZ Offset: %d,\tX Accel: %d,\tY Accel: %d,\tZ Accel: %d,\r\n", frameFormat.imu.x_rate,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
......
  401 |                                                                         frameFormat.imu.y_offset,
      |                                                                         ~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        |
      |                                                                                        int32_t {aka long int}
NAND_flash_driver.h:396:10: warning: format '%d' expects argument of type 'int', but argument 7 has type 'int32_t' {aka 'long int'} [-Wformat=]
  396 |   printf("IMU: \tX Rate: %d,\tY Rate: %d,\tZ Rate: %d,\tX Offset: %d,\tY Offset: %d, \
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  397 |         \tZ Offset: %d,\tX Accel: %d,\tY Accel: %d,\tZ Accel: %d,\r\n", frameFormat.imu.x_rate,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
......
  402 |                                                                         frameFormat.imu.z_offset,
      |                                                                         ~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        |
      |                                                                                        int32_t {aka long int}
NAND_flash_driver.h: In function 'read_all_raw':
NAND_flash_driver.h:1033:11: warning: passing argument 1 of '_memset' from incompatible pointer type [-Wincompatible-pointer-types]
 1033 |   _memset(&array, 0, 128);
      |           ^~~~~~
      |           |
      |           uint8_t (*)[128] {aka unsigned char (*)[128]}
NAND_flash_driver.h:377:37: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'uint8_t (*)[128]' {aka 'unsigned char (*)[128]'}
  377 | static inline void _memset(uint8_t *arr, uint8_t val, int num){
      |                            ~~~~~~~~~^~~
NAND_flash_driver.h:1047:21: warning: passing argument 2 of 'read_frame' from incompatible pointer type [-Wincompatible-pointer-types]
 1047 |       read_frame(i, &array, 128);
      |                     ^~~~~~
      |                     |
      |                     uint8_t (*)[128] {aka unsigned char (*)[128]}
NAND_flash_driver.h:640:60: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'uint8_t (*)[128]' {aka 'unsigned char (*)[128]'}
  640 | static inline void read_frame(uint32_t frameAddr, uint8_t *readFrameBytes, uint8_t _length) {
      |                                                   ~~~~~~~~~^~~~~~~~~~~~~~
NAND_flash_driver.h: In function 'read_all_frame':
NAND_flash_driver.h:1064:11: warning: passing argument 1 of '_memset' from incompatible pointer type [-Wincompatible-pointer-types]
 1064 |   _memset(&array, 0, 128);
      |           ^~~~~~
      |           |
      |           uint8_t (*)[128] {aka unsigned char (*)[128]}
NAND_flash_driver.h:377:37: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'uint8_t (*)[128]' {aka 'unsigned char (*)[128]'}
  377 | static inline void _memset(uint8_t *arr, uint8_t val, int num){
      |                            ~~~~~~~~~^~~
NAND_flash_driver.h: In function 'read_all_csv':
NAND_flash_driver.h:1096:11: warning: passing argument 1 of '_memset' from incompatible pointer type [-Wincompatible-pointer-types]
 1096 |   _memset(&array, 0, 128);
      |           ^~~~~~
      |           |
      |           uint8_t (*)[128] {aka unsigned char (*)[128]}
NAND_flash_driver.h:377:37: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'uint8_t (*)[128]' {aka 'unsigned char (*)[128]'}
  377 | static inline void _memset(uint8_t *arr, uint8_t val, int num){
      |                            ~~~~~~~~~^~~
NAND_flash_driver.h: In function 'read_all':
NAND_flash_driver.h:1132:11: warning: passing argument 1 of '_memset' from incompatible pointer type [-Wincompatible-pointer-types]
 1132 |   _memset(&array, 0, 128);
      |           ^~~~~~
      |           |
      |           uint8_t (*)[128] {aka unsigned char (*)[128]}
NAND_flash_driver.h:377:37: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'uint8_t (*)[128]' {aka 'unsigned char (*)[128]'}
  377 | static inline void _memset(uint8_t *arr, uint8_t val, int num){
      |                            ~~~~~~~~~^~~
NAND_flash_driver.h:1142:21: warning: passing argument 2 of 'read_frame' from incompatible pointer type [-Wincompatible-pointer-types]
 1142 |       read_frame(i, &array, 128);
      |                     ^~~~~~
      |                     |
      |                     uint8_t (*)[128] {aka unsigned char (*)[128]}
NAND_flash_driver.h:640:60: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'uint8_t (*)[128]' {aka 'unsigned char (*)[128]'}
  640 | static inline void read_frame(uint32_t frameAddr, uint8_t *readFrameBytes, uint8_t _length) {
      |                                                   ~~~~~~~~~^~~~~~~~~~~~~~
NAND_flash_driver.h:1122:14: warning: variable '_output' set but not used [-Wunused-but-set-variable]
 1122 |   FrameArray _output;
      |              ^~~~~~~
main.c: In function 'get_frame_array':
main.c:41:30: warning: conversion from 'long unsigned int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
   41 |   _frameArray->date.minute = (time/(1000000*60))%60; //minuts
      |                              ^
main.c:42:30: warning: conversion from 'long unsigned int' to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
   42 |   _frameArray->date.second = (time/1000000)%60; //seconds
      |                              ^
main.c:43:35: warning: conversion from 'long unsigned int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
   43 |   _frameArray->date.millisecond = (time/1000)%1000; //milli seconds
      |                                   ^
main.c:44:35: warning: conversion from 'long unsigned int' to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
   44 |   _frameArray->date.microsecond = time%1000; //Mirco seconds
      |                                   ^~~~
main.c: In function 'update_sensors':
main.c:59:3: warning: implicit declaration of function 'MS5611_get_data'; did you mean 'MS5611_set_OSR'? [-Wimplicit-function-declaration]
   59 |   MS5611_get_data(_M5611_data);
      |   ^~~~~~~~~~~~~~~
      |   MS5611_set_OSR
main.c: In function 'main':
main.c:98:3: warning: implicit declaration of function 'STM32_indicate_on'; did you mean 'STM32_indicate_on_led'? [-Wimplicit-function-declaration]
   98 |   STM32_indicate_on();
      |   ^~~~~~~~~~~~~~~~~
      |   STM32_indicate_on_led
main.c:127:17: warning: passing argument 1 of 'unzip' from incompatible pointer type [-Wincompatible-pointer-types]
  127 |   frame = unzip(&dataArray);                // convert from normal array into FrameArray
      |                 ^~~~~~~~~~
      |                 |
      |                 uint8_t (*)[128] {aka unsigned char (*)[128]}
NAND_flash_driver.h:218:41: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'uint8_t (*)[128]' {aka 'unsigned char (*)[128]'}
  218 | static inline FrameArray unzip(uint8_t *zippedData) {
      |                                ~~~~~~~~~^~~~~~~~~~
main.c:261:15: warning: declaration of '_data' shadows a previous local [-Wshadow]
  261 |           int _data[WINDOW_SIZE];
      |               ^~~~~
main.c:132:7: note: shadowed declaration is here
  132 |   int _data[WINDOW_SIZE];
      |       ^~~~~
main.c:145:12: warning: unused variable 'dt' [-Wunused-variable]
  145 |   uint32_t dt = 0;
      |            ^~
drivers/LSM6DS3_driver.h: At top level:
drivers/LSM6DS3_driver.h:120:13: warning: 'Lsm6ds3WriteRegister' declared 'static' but never defined [-Wunused-function]
  120 | static void Lsm6ds3WriteRegister(SPI_TypeDef *spi, uint8_t register_id, uint8_t value, unsigned delayMs);
      |             ^~~~~~~~~~~~~~~~~~~~
drivers/LSM6DS3_driver.h:121:13: warning: 'Lsm6ds3WriteRegisterBits' declared 'static' but never defined [-Wunused-function]
  121 | static void Lsm6ds3WriteRegisterBits(SPI_TypeDef *spi, uint8_t register_id, uint8_t mask, uint8_t value, unsigned delayMs);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from frame_array.h:15:
drivers/BME280_driver.h:274:13: warning: 'parse_sensor_data' declared 'static' but never defined [-Wunused-function]
  274 | static void parse_sensor_data(const uint8_t *reg_data, struct BME280_uncomp_data *uncomp_data);
      |             ^~~~~~~~~~~~~~~~~
In file included from main.c:18:
data_buffer.h:26:14: warning: 'sea_level_pressure' defined but not used [-Wunused-variable]
   26 | static float sea_level_pressure = 1013.25;    // Sea level presser in micro bar
      |              ^~~~~~~~~~~~~~~~~~
mcu.h:56:13: warning: 'printf_float' defined but not used [-Wunused-function]
   56 | static void printf_float(char* name, float value, bool print_text) {
      |             ^~~~~~~~~~~~
NAND_flash_driver.h: In function 'unzip':
NAND_flash_driver.h:232:15: warning: 'unzippedData.changeFlag' is used uninitialized [-Wuninitialized]
  232 |   unzippedData.changeFlag |= zippedData[i++];
      |   ~~~~~~~~~~~~^~~~~~~~~~~
NAND_flash_driver.h:219:14: note: 'unzippedData' declared here
  219 |   FrameArray unzippedData;
      |              ^~~~~~~~~~~~
NAND_flash_driver.h:297:20: warning: 'unzippedData.GNSS.altitude' is used uninitialized [-Wuninitialized]
  297 |   unzippedData.GNSS.altitude |= (zippedData[i++] << 8) & (0xFF << 8);
      |   ~~~~~~~~~~~~~~~~~^~~~~~~~~
NAND_flash_driver.h:219:14: note: 'unzippedData' declared here
  219 |   FrameArray unzippedData;
      |              ^~~~~~~~~~~~
NAND_flash_driver.h:299:20: warning: 'unzippedData.GNSS.velocity' is used uninitialized [-Wuninitialized]
  299 |   unzippedData.GNSS.velocity |= (zippedData[i++] << 8) & (0xFF << 8);
      |   ~~~~~~~~~~~~~~~~~^~~~~~~~~
NAND_flash_driver.h:219:14: note: 'unzippedData' declared here
  219 |   FrameArray unzippedData;
      |              ^~~~~~~~~~~~
NAND_flash_driver.h:307:19: warning: 'unzippedData.bme.temperature' is used uninitialized [-Wuninitialized]
  307 |   unzippedData.bme.temperature |= (zippedData[i++] << 8) & (0xFF << 8);
      |   ~~~~~~~~~~~~~~~~^~~~~~~~~~~~
NAND_flash_driver.h:219:14: note: 'unzippedData' declared here
  219 |   FrameArray unzippedData;
      |              ^~~~~~~~~~~~
In file included from syscalls.c:1:
mcu.h: In function 'spi_transmit_receive':
mcu.h:545:15: warning: conversion to 'int8_t' {aka 'signed char'} from 'uint8_t' {aka 'unsigned char'} may change the sign of the result [-Wsign-conversion]
  545 |   int8_t rs = receive_size;
      |               ^~~~~~~~~~~~
mcu.h:556:31: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
  556 |     *((uint8_t*)result_ptr) = result;
      |                               ^~~~~~
mcu.h:558:32: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  558 |     *((uint16_t*)result_ptr) = result;
      |                                ^~~~~~
mcu.h: At top level:
mcu.h:56:13: warning: 'printf_float' defined but not used [-Wunused-function]
   56 | static void printf_float(char* name, float value, bool print_text) {
      |             ^~~~~~~~~~~~
In file included from STM32_init.h:10,
                 from STM32_init.c:8:
mcu.h: In function 'spi_transmit_receive':
mcu.h:545:15: warning: conversion to 'int8_t' {aka 'signed char'} from 'uint8_t' {aka 'unsigned char'} may change the sign of the result [-Wsign-conversion]
  545 |   int8_t rs = receive_size;
      |               ^~~~~~~~~~~~
mcu.h:556:31: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
  556 |     *((uint8_t*)result_ptr) = result;
      |                               ^~~~~~
mcu.h:558:32: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  558 |     *((uint16_t*)result_ptr) = result;
      |                                ^~~~~~
mcu.h: At top level:
mcu.h:56:13: warning: 'printf_float' defined but not used [-Wunused-function]
   56 | static void printf_float(char* name, float value, bool print_text) {
      |             ^~~~~~~~~~~~
In file included from drivers/MS5611_driver.h:13,
                 from drivers/MS5611_driver.c:8:
./mcu.h: In function 'spi_transmit_receive':
./mcu.h:545:15: warning: conversion to 'int8_t' {aka 'signed char'} from 'uint8_t' {aka 'unsigned char'} may change the sign of the result [-Wsign-conversion]
  545 |   int8_t rs = receive_size;
      |               ^~~~~~~~~~~~
./mcu.h:556:31: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
  556 |     *((uint8_t*)result_ptr) = result;
      |                               ^~~~~~
./mcu.h:558:32: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  558 |     *((uint16_t*)result_ptr) = result;
      |                                ^~~~~~
drivers/MS5611_driver.c: At top level:
drivers/MS5611_driver.c:25:1: warning: no semicolon at end of struct or union
   25 | } PROM_data;
      | ^
drivers/MS5611_driver.c: In function 'MS5611_init':
drivers/MS5611_driver.c:37:45: warning: passing argument 2 of 'spi_transmit' makes integer from pointer without a cast [-Wint-conversion]
   37 |     uint8_t init = spi_transmit(MS5611_SPI, &cmd);
      |                                             ^~~~
      |                                             |
      |                                             int *
./mcu.h:519:62: note: expected 'uint8_t' {aka 'unsigned char'} but argument is of type 'int *'
  519 | static inline uint8_t spi_transmit(SPI_TypeDef *spi, uint8_t send_byte)
      |                                                      ~~~~~~~~^~~~~~~~~
drivers/MS5611_driver.c:41:5: warning: implicit declaration of function 'MS5611_get_data'; did you mean 'MS5611_set_OSR'? [-Wimplicit-function-declaration]
   41 |     MS5611_get_data(&data);
      |     ^~~~~~~~~~~~~~~
      |     MS5611_set_OSR
drivers/MS5611_driver.c:37:13: warning: unused variable 'init' [-Wunused-variable]
   37 |     uint8_t init = spi_transmit(MS5611_SPI, &cmd);
      |             ^~~~
drivers/MS5611_driver.c: In function 'MS5611_read_PROM':
drivers/MS5611_driver.c:58:42: warning: passing argument 2 of 'spi_transmit_receive' from incompatible pointer type [-Wincompatible-pointer-types]
   58 |         spi_transmit_receive(MS5611_SPI, &cmd, 1, 2, &result);
      |                                          ^~~~
      |                                          |
      |                                          int *
./mcu.h:532:52: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'int *'
  532 |                                           uint8_t *send_byte,
      |                                           ~~~~~~~~~^~~~~~~~~
drivers/MS5611_driver.c:62:27: warning: conversion to 'int16_t' {aka 'short int'} from 'uint16_t' {aka 'short unsigned int'} may change the sign of the result [-Wsign-conversion]
   62 |         *(prom_ptr + i) = result;
      |                           ^~~~~~
drivers/MS5611_driver.c: In function 'MS5611_get_data':
drivers/MS5611_driver.c:73:38: warning: passing argument 2 of 'spi_transmit_receive' from incompatible pointer type [-Wincompatible-pointer-types]
   73 |     spi_transmit_receive(MS5611_SPI, &cmd, 1, 0, NULL);
      |                                      ^~~~
      |                                      |
      |                                      int *
./mcu.h:532:52: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'int *'
  532 |                                           uint8_t *send_byte,
      |                                           ~~~~~~~~~^~~~~~~~~
drivers/MS5611_driver.c:81:38: warning: passing argument 2 of 'spi_transmit_receive' from incompatible pointer type [-Wincompatible-pointer-types]
   81 |     spi_transmit_receive(MS5611_SPI, &cmd, 1, 3, &D2);
      |                                      ^~~~
      |                                      |
      |                                      int *
./mcu.h:532:52: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'int *'
  532 |                                           uint8_t *send_byte,
      |                                           ~~~~~~~~~^~~~~~~~~
drivers/MS5611_driver.c:84:18: warning: conversion to 'int32_t' {aka 'long int'} from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
   84 |     int32_t dT = (D2) - ((int32_t)ms5611_prom_data.T_REF << 8);
      |                  ^
drivers/MS5611_driver.c:89:38: warning: passing argument 2 of 'spi_transmit_receive' from incompatible pointer type [-Wincompatible-pointer-types]
   89 |     spi_transmit_receive(MS5611_SPI, &cmd, 1, 0, NULL);
      |                                      ^~~~
      |                                      |
      |                                      int *
./mcu.h:532:52: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'int *'
  532 |                                           uint8_t *send_byte,
      |                                           ~~~~~~~~~^~~~~~~~~
drivers/MS5611_driver.c:97:38: warning: passing argument 2 of 'spi_transmit_receive' from incompatible pointer type [-Wincompatible-pointer-types]
   97 |     spi_transmit_receive(MS5611_SPI, &cmd, 1, 3, &D1);
      |                                      ^~~~
      |                                      |
      |                                      int *
./mcu.h:532:52: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'int *'
  532 |                                           uint8_t *send_byte,
      |                                           ~~~~~~~~~^~~~~~~~~
drivers/MS5611_driver.c:100:19: warning: conversion from 'double' to 'int64_t' {aka 'long long int'} may change value [-Wfloat-conversion]
  100 |     int64_t OFF = (ms5611_prom_data.OFF * pow(2,16)) + (ms5611_prom_data.TCO*dT)/pow(2,7);
      |                   ^
drivers/MS5611_driver.c:101:20: warning: conversion from 'double' to 'int64_t' {aka 'long long int'} may change value [-Wfloat-conversion]
  101 |     int64_t SENS = (ms5611_prom_data.SENS * pow(2,15)) + (ms5611_prom_data.TCS*dT)/pow(2,8);
      |                    ^
drivers/MS5611_driver.c:102:35: warning: conversion from 'int64_t' {aka 'long long int'} to 'double' may change value [-Wconversion]
  102 |     int32_t PRESSURE = (D1 * SENS / pow(2,21) - OFF) / pow(2,15);
      |                                   ^
drivers/MS5611_driver.c:102:47: warning: conversion from 'int64_t' {aka 'long long int'} to 'double' may change value [-Wconversion]
  102 |     int32_t PRESSURE = (D1 * SENS / pow(2,21) - OFF) / pow(2,15);
      |                                               ^
drivers/MS5611_driver.c:102:24: warning: conversion from 'double' to 'int32_t' {aka 'long int'} may change value [-Wfloat-conversion]
  102 |     int32_t PRESSURE = (D1 * SENS / pow(2,21) - OFF) / pow(2,15);
      |                        ^
./mcu.h: At top level:
./mcu.h:56:13: warning: 'printf_float' defined but not used [-Wunused-function]
   56 | static void printf_float(char* name, float value, bool print_text) {
      |             ^~~~~~~~~~~~
In file included from filters.h:13,
                 from filters.c:8:
mcu.h: In function 'spi_transmit_receive':
mcu.h:545:15: warning: conversion to 'int8_t' {aka 'signed char'} from 'uint8_t' {aka 'unsigned char'} may change the sign of the result [-Wsign-conversion]
  545 |   int8_t rs = receive_size;
      |               ^~~~~~~~~~~~
mcu.h:556:31: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
  556 |     *((uint8_t*)result_ptr) = result;
      |                               ^~~~~~
mcu.h:558:32: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  558 |     *((uint16_t*)result_ptr) = result;
      |                                ^~~~~~
filters.h: At top level:
filters.h:15: warning: "M_PI" redefined
   15 | #define M_PI 205887 //3.14159 << 16   // Value of pi in fixed point
      | 
In file included from mcu.h:14:
/opt/arm-none-eabi/arm-none-eabi/include/math.h:613: note: this is the location of the previous definition
  613 | #define M_PI            3.14159265358979323846
      | 
mcu.h:56:13: warning: 'printf_float' defined but not used [-Wunused-function]
   56 | static void printf_float(char* name, float value, bool print_text) {
      |             ^~~~~~~~~~~~
In file included from drivers/ADXL375_driver.h:10,
                 from drivers/ADXL375_driver.c:8:
./mcu.h: In function 'spi_transmit_receive':
./mcu.h:545:15: warning: conversion to 'int8_t' {aka 'signed char'} from 'uint8_t' {aka 'unsigned char'} may change the sign of the result [-Wsign-conversion]
  545 |   int8_t rs = receive_size;
      |               ^~~~~~~~~~~~
./mcu.h:556:31: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
  556 |     *((uint8_t*)result_ptr) = result;
      |                               ^~~~~~
./mcu.h:558:32: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  558 |     *((uint16_t*)result_ptr) = result;
      |                                ^~~~~~
./mcu.h: At top level:
./mcu.h:56:13: warning: 'printf_float' defined but not used [-Wunused-function]
   56 | static void printf_float(char* name, float value, bool print_text) {
      |             ^~~~~~~~~~~~
In file included from test_routines.h:9,
                 from test_routines.c:8:
mcu.h: In function 'spi_transmit_receive':
mcu.h:545:15: warning: conversion to 'int8_t' {aka 'signed char'} from 'uint8_t' {aka 'unsigned char'} may change the sign of the result [-Wsign-conversion]
  545 |   int8_t rs = receive_size;
      |               ^~~~~~~~~~~~
mcu.h:556:31: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
  556 |     *((uint8_t*)result_ptr) = result;
      |                               ^~~~~~
mcu.h:558:32: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  558 |     *((uint16_t*)result_ptr) = result;
      |                                ^~~~~~
In file included from drivers/LSM6DS3_driver.h:11,
                 from test_routines.h:13:
./filters.h: At top level:
./filters.h:15: warning: "M_PI" redefined
   15 | #define M_PI 205887 //3.14159 << 16   // Value of pi in fixed point
      | 
In file included from mcu.h:14:
/opt/arm-none-eabi/arm-none-eabi/include/math.h:613: note: this is the location of the previous definition
  613 | #define M_PI            3.14159265358979323846
      | 
test_routines.c: In function 'run_MS5611_routine':
test_routines.c:39:5: warning: implicit declaration of function 'MS5611_get_data'; did you mean 'MS5611_set_OSR'? [-Wimplicit-function-declaration]
   39 |     MS5611_get_data(&_data);
      |     ^~~~~~~~~~~~~~~
      |     MS5611_set_OSR
test_routines.c:40:17: warning: format '%d' expects argument of type 'int', but argument 2 has type 'int32_t' {aka 'long int'} [-Wformat=]
   40 |     printf("p: %d, t: %ld, \r\n", _data.pressure, _data.temp);
      |                ~^                 ~~~~~~~~~~~~~~
      |                 |                      |
      |                 int                    int32_t {aka long int}
      |                %ld
test_routines.c: In function 'run_ADXL375_routine':
test_routines.c:50:16: warning: unused variable '_data' [-Wunused-variable]
   50 |   ADXL375_data _data;
      |                ^~~~~
test_routines.c: In function 'run_LSM6DS3_routine':
test_routines.c:81:3: warning: implicit declaration of function 'lsm6ds6_init'; did you mean 'Lsm6ds3Init'? [-Wimplicit-function-declaration]
   81 |   lsm6ds6_init(SPI1, &gyro_data);
      |   ^~~~~~~~~~~~
      |   Lsm6ds3Init
test_routines.c:84:5: warning: implicit declaration of function 'lsm6ds6GyroReadAngle'; did you mean 'Lsm6ds3GyroReadAngle'? [-Wimplicit-function-declaration]
   84 |     lsm6ds6GyroReadAngle(SPI1, &gyro_data);
      |     ^~~~~~~~~~~~~~~~~~~~
      |     Lsm6ds3GyroReadAngle
test_routines.c: In function 'spi_test_routine':
test_routines.c:95:23: warning: unused variable 'period' [-Wunused-variable]
   95 |   uint32_t timer = 0, period = 500;
      |                       ^~~~~~
test_routines.c:95:12: warning: unused variable 'timer' [-Wunused-variable]
   95 |   uint32_t timer = 0, period = 500;
      |            ^~~~~
drivers/LSM6DS3_driver.h: At top level:
drivers/LSM6DS3_driver.h:120:13: warning: 'Lsm6ds3WriteRegister' declared 'static' but never defined [-Wunused-function]
  120 | static void Lsm6ds3WriteRegister(SPI_TypeDef *spi, uint8_t register_id, uint8_t value, unsigned delayMs);
      |             ^~~~~~~~~~~~~~~~~~~~
drivers/LSM6DS3_driver.h:121:13: warning: 'Lsm6ds3WriteRegisterBits' declared 'static' but never defined [-Wunused-function]
  121 | static void Lsm6ds3WriteRegisterBits(SPI_TypeDef *spi, uint8_t register_id, uint8_t mask, uint8_t value, unsigned delayMs);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from test_routines.h:14:
drivers/SI446_driver.h:137:15: warning: 'SI446_get_response' declared 'static' but never defined [-Wunused-function]
  137 | static int8_t SI446_get_response(int byteCount, uint8_t *data);
      |               ^~~~~~~~~~~~~~~~~~
drivers/SI446_driver.h:147:15: warning: 'SI446_check_CTS' declared 'static' but never defined [-Wunused-function]
  147 | static int8_t SI446_check_CTS(int desired);
      |               ^~~~~~~~~~~~~~~
drivers/SI446_driver.h:153:15: warning: 'SI446_power_up' declared 'static' but never defined [-Wunused-function]
  153 | static int8_t SI446_power_up();
      |               ^~~~~~~~~~~~~~
mcu.h:56:13: warning: 'printf_float' defined but not used [-Wunused-function]
   56 | static void printf_float(char* name, float value, bool print_text) {
      |             ^~~~~~~~~~~~
In file included from drivers/ADXL375_driver.h:10,
                 from data_buffer.h:11,
                 from data_buffer.c:8:
./mcu.h: In function 'spi_transmit_receive':
./mcu.h:545:15: warning: conversion to 'int8_t' {aka 'signed char'} from 'uint8_t' {aka 'unsigned char'} may change the sign of the result [-Wsign-conversion]
  545 |   int8_t rs = receive_size;
      |               ^~~~~~~~~~~~
./mcu.h:556:31: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
  556 |     *((uint8_t*)result_ptr) = result;
      |                               ^~~~~~
./mcu.h:558:32: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  558 |     *((uint16_t*)result_ptr) = result;
      |                                ^~~~~~
In file included from drivers/LSM6DS3_driver.h:11,
                 from frame_array.h:13,
                 from data_buffer.h:16:
./filters.h: At top level:
./filters.h:15: warning: "M_PI" redefined
   15 | #define M_PI 205887 //3.14159 << 16   // Value of pi in fixed point
      | 
In file included from ./mcu.h:14:
/opt/arm-none-eabi/arm-none-eabi/include/math.h:613: note: this is the location of the previous definition
  613 | #define M_PI            3.14159265358979323846
      | 
data_buffer.c: In function 'get_median':
data_buffer.c:30:21: warning: 'sizeof' on array function parameter 'data' will return size of 'int *' [-Wsizeof-array-argument]
   30 |   qsort(data, sizeof(data), sizeof(int), cmpfunc);
      |                     ^
data_buffer.c:29:20: note: declared here
   29 | int get_median(int data[], int size) {
      |                ~~~~^~~~~~
data_buffer.c:31:13: warning: 'sizeof' on array function parameter 'data' will return size of 'int *' [-Wsizeof-array-argument]
   31 |   if (sizeof(data) % 2 != 0)
      |             ^
data_buffer.c:29:20: note: declared here
   29 | int get_median(int data[], int size) {
      |                ~~~~^~~~~~
data_buffer.c: In function 'get_vertical_velocity':
data_buffer.c:76:23: warning: conversion from 'double' to 'float' may change value [-Wfloat-conversion]
   76 |   previous_altitude = 44330.7692 * (1.0 - pow(((float)data[0] / 100.0f) / sea_level_pressure, 0.1902));
      |                       ^~~~~~~~~~
data_buffer.c:77:22: warning: conversion from 'double' to 'float' may change value [-Wfloat-conversion]
   77 |   current_altitude = 44330.7692 * (1.0 - pow(((float)data[19] / 100.0f) / sea_level_pressure, 0.1902));
      |                      ^~~~~~~~~~
data_buffer.c:81:39: warning: conversion from 'int' to 'float' may change value [-Wconversion]
   81 |   float total_time = dt * WINDOW_SIZE * 1e-6f;
      |                                       ^
data_buffer.c:74:9: warning: unused variable 'test' [-Wunused-variable]
   74 |   float test = 0.0;
      |         ^~~~
data_buffer.c:70:45: warning: unused parameter 'size' [-Wunused-parameter]
   70 | float get_vertical_velocity(int data[], int size, int dt) {
      |                                         ~~~~^~~~
data_buffer.c: In function 'is_stationary':
data_buffer.c:97:17: warning: conversion from 'double' to 'int' may change value [-Wfloat-conversion]
   97 |     variance += pow((data[i] - mean), 2);
      |                 ^~~
drivers/LSM6DS3_driver.h: At top level:
drivers/LSM6DS3_driver.h:120:13: warning: 'Lsm6ds3WriteRegister' declared 'static' but never defined [-Wunused-function]
  120 | static void Lsm6ds3WriteRegister(SPI_TypeDef *spi, uint8_t register_id, uint8_t value, unsigned delayMs);
      |             ^~~~~~~~~~~~~~~~~~~~
drivers/LSM6DS3_driver.h:121:13: warning: 'Lsm6ds3WriteRegisterBits' declared 'static' but never defined [-Wunused-function]
  121 | static void Lsm6ds3WriteRegisterBits(SPI_TypeDef *spi, uint8_t register_id, uint8_t mask, uint8_t value, unsigned delayMs);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from frame_array.h:15:
drivers/BME280_driver.h:274:13: warning: 'parse_sensor_data' declared 'static' but never defined [-Wunused-function]
  274 | static void parse_sensor_data(const uint8_t *reg_data, struct BME280_uncomp_data *uncomp_data);
      |             ^~~~~~~~~~~~~~~~~
./mcu.h:56:13: warning: 'printf_float' defined but not used [-Wunused-function]
   56 | static void printf_float(char* name, float value, bool print_text) {
      |             ^~~~~~~~~~~~
In file included from drivers/LSM6DS3_driver.h:9,
                 from drivers/LSM6DS3_driver.c:11:
./mcu.h: In function 'spi_transmit_receive':
./mcu.h:545:15: warning: conversion to 'int8_t' {aka 'signed char'} from 'uint8_t' {aka 'unsigned char'} may change the sign of the result [-Wsign-conversion]
  545 |   int8_t rs = receive_size;
      |               ^~~~~~~~~~~~
./mcu.h:556:31: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint8_t' {aka 'unsigned char'} may change value [-Wconversion]
  556 |     *((uint8_t*)result_ptr) = result;
      |                               ^~~~~~
./mcu.h:558:32: warning: conversion from 'uint32_t' {aka 'long unsigned int'} to 'uint16_t' {aka 'short unsigned int'} may change value [-Wconversion]
  558 |     *((uint16_t*)result_ptr) = result;
      |                                ^~~~~~
In file included from drivers/LSM6DS3_driver.h:11:
./filters.h: At top level:
./filters.h:15: warning: "M_PI" redefined
   15 | #define M_PI 205887 //3.14159 << 16   // Value of pi in fixed point
      | 
In file included from ./mcu.h:14:
/opt/arm-none-eabi/arm-none-eabi/include/math.h:613: note: this is the location of the previous definition
  613 | #define M_PI            3.14159265358979323846
      | 
drivers/LSM6DS3_driver.c: In function 'Lsm6ds3Init':
drivers/LSM6DS3_driver.c:21:31: warning: passing argument 2 of 'spi_transmit_receive' from incompatible pointer type [-Wincompatible-pointer-types]
   21 |     spi_transmit_receive(spi, &send_data, 1, 1, &chip_id);
      |                               ^~~~~~~~~~
      |                               |
      |                               uint8_t (*)[1] {aka unsigned char (*)[1]}
./mcu.h:532:52: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'uint8_t (*)[1]' {aka 'unsigned char (*)[1]'}
  532 |                                           uint8_t *send_byte,
      |                                           ~~~~~~~~~^~~~~~~~~
drivers/LSM6DS3_driver.c: In function 'Lsm6ds3AccRead':
drivers/LSM6DS3_driver.h:94:36: warning: conversion from 'long int' to 'int16_t' {aka 'short int'} may change value [-Wconversion]
   94 | #define LMS6DS6_ACCEL_SENSITIVITY  488 //for +-16G, sensitivity is 0.488 mg/LSB
      |                                    ^~~
drivers/LSM6DS3_driver.c:141:21: note: in expansion of macro 'LMS6DS6_ACCEL_SENSITIVITY'
  141 |     gyro->x_accel = LMS6DS6_ACCEL_SENSITIVITY*(int32_t)((int16_t)((lsm6ds3_rx_buf[IDX_ACCEL_XOUT_H] << 8) | lsm6ds3_rx_buf[IDX_ACCEL_XOUT_L]))/1000;
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~
drivers/LSM6DS3_driver.h:94:36: warning: conversion from 'long int' to 'int16_t' {aka 'short int'} may change value [-Wconversion]
   94 | #define LMS6DS6_ACCEL_SENSITIVITY  488 //for +-16G, sensitivity is 0.488 mg/LSB
      |                                    ^~~
drivers/LSM6DS3_driver.c:142:21: note: in expansion of macro 'LMS6DS6_ACCEL_SENSITIVITY'
  142 |     gyro->y_accel = LMS6DS6_ACCEL_SENSITIVITY*(int32_t)((int16_t)((lsm6ds3_rx_buf[IDX_ACCEL_YOUT_H] << 8) | lsm6ds3_rx_buf[IDX_ACCEL_YOUT_L]))/1000;
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~
drivers/LSM6DS3_driver.h:94:36: warning: conversion from 'long int' to 'int16_t' {aka 'short int'} may change value [-Wconversion]
   94 | #define LMS6DS6_ACCEL_SENSITIVITY  488 //for +-16G, sensitivity is 0.488 mg/LSB
      |                                    ^~~
drivers/LSM6DS3_driver.c:143:21: note: in expansion of macro 'LMS6DS6_ACCEL_SENSITIVITY'
  143 |     gyro->z_accel = LMS6DS6_ACCEL_SENSITIVITY*(int32_t)((int16_t)((lsm6ds3_rx_buf[IDX_ACCEL_ZOUT_H] << 8) | lsm6ds3_rx_buf[IDX_ACCEL_ZOUT_L]))/1000;
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~
drivers/LSM6DS3_driver.c: In function 'Lsmds3GyroStandardDev':
drivers/LSM6DS3_driver.c:228:24: warning: conversion from 'long double' to 'long int' may change value [-Wfloat-conversion]
  228 |         variance[0] += powl(buff[i].x_rate - means[0],2);
      |                        ^~~~
drivers/LSM6DS3_driver.c:229:24: warning: conversion from 'long double' to 'long int' may change value [-Wfloat-conversion]
  229 |         variance[1] += powl(buff[i].y_rate - means[1],2);
      |                        ^~~~
drivers/LSM6DS3_driver.c:230:24: warning: conversion from 'long double' to 'long int' may change value [-Wfloat-conversion]
  230 |         variance[2] += powl(buff[i].z_rate - means[2],2);
      |                        ^~~~
drivers/LSM6DS3_driver.c:239:23: warning: conversion from 'double' to 'int' may change value [-Wfloat-conversion]
  239 |     int std_dev[3] = {sqrt(variance[0]), sqrt(variance[1]), sqrt(variance[2])};
      |                       ^~~~
drivers/LSM6DS3_driver.c:239:42: warning: conversion from 'double' to 'int' may change value [-Wfloat-conversion]
  239 |     int std_dev[3] = {sqrt(variance[0]), sqrt(variance[1]), sqrt(variance[2])};
      |                                          ^~~~
drivers/LSM6DS3_driver.c:239:61: warning: conversion from 'double' to 'int' may change value [-Wfloat-conversion]
  239 |     int std_dev[3] = {sqrt(variance[0]), sqrt(variance[1]), sqrt(variance[2])};
      |                                                             ^~~~
./mcu.h: At top level:
./mcu.h:56:13: warning: 'printf_float' defined but not used [-Wunused-function]
   56 | static void printf_float(char* name, float value, bool print_text) {
      |             ^~~~~~~~~~~~
/opt/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/13.2.1/../../../../arm-none-eabi/bin/ld: warning: firmware.elf has a LOAD segment with RWX permissions
arm-none-eabi-objcopy -O binary firmware.elf firmware.bin
